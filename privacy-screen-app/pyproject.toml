[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "privacy-screen-app"
version = "1.0.0"
description = "Privacy Screen App (SafeView) - Real-time screen protection using computer vision"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Privacy Screen App Team", email = "support@privacyscreenapp.com"}
]
maintainers = [
    {name = "Privacy Screen App Team", email = "support@privacyscreenapp.com"}
]
keywords = ["privacy", "security", "computer-vision", "face-detection", "screen-protection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Multimedia :: Video :: Capture",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.8"
dependencies = [
    "opencv-python>=4.8.0",
    "opencv-contrib-python>=4.8.0",
    "numpy>=1.24.0",
    "pillow>=10.0.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "mediapipe>=0.10.0",
    "dlib>=19.24.0",
    "face-recognition>=1.3.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "loguru>=0.7.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
gui = [
    "tkinter-tooltip>=2.0.0",
    "customtkinter>=5.2.0",
    "PyQt6>=6.5.0",
    "kivy>=2.2.0",
]
platform = [
    "pyobjc-framework-AVFoundation>=9.0; sys_platform == 'darwin'",
    "pywin32>=306; sys_platform == 'win32'",
]

[project.urls]
Homepage = "https://github.com/your-username/privacy-screen-app"
Documentation = "https://github.com/your-username/privacy-screen-app#readme"
Repository = "https://github.com/your-username/privacy-screen-app.git"
"Bug Tracker" = "https://github.com/your-username/privacy-screen-app/issues"
"Source Code" = "https://github.com/your-username/privacy-screen-app"

[project.scripts]
privacy-screen-app = "src.main:main"
safeview = "src.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["privacy_screen_app"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]